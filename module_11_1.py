# -*- coding: utf-8 -*-
"""
Задача:
Выберите одну или несколько сторонних библиотек Python, например, requests, pandas, numpy, matplotlib, pillow.
После выбора библиотек(-и) изучите документацию к ней(ним), ознакомьтесь с их основными возможностями и функциями.
К каждой библиотеке дана ссылка на документацию ниже.
Если вы выбрали:
requests - запросить данные с сайта и вывести их в консоль.
pandas - считать данные из файла, выполнить простой анализ данных (на своё усмотрение) и вывести результаты в консоль.
numpy - создать массив чисел, выполнить математические операции с массивом и вывести результаты в консоль.
matplotlib - визуализировать данные с помощью библиотеки любым удобным для вас инструментом из библиотеки.
pillow - обработать изображение, например, изменить его размер, применить эффекты и сохранить в другой формат.
В приложении к ссылке на GitHub напишите комментарий о возможностях,
которые предоставила вам выбранная библиотека и как вы расширили возможности Python с её помощью.
Примечания:
Можете выбрать не более 3-х библиотек для изучения.
Желательно продемонстрировать от 3-х функций/классов/методов/операций из каждой выбранной библиотеки.
"""

import requests
import pandas
import numpy
import matplotlib
# import pillow

# Запрос фрагмента карты из Яндекс-карты по координатам и запись в файл с библиотекой 'requests'

req1 = requests.get('https://static-maps.yandex.ru/1.x/?ll=30.436219,60.053463&spn=0.016457,0.00619&l=map')
with open("map.png", "wb") as file:
    file.write(req1.content)
print(30*'-')

# Методы работы с табличными данными с библиотекой 'pandas'

workers = pandas.read_csv("Зарплатная ведомость.csv")  # Просмотр ведомости
hi5 = workers.sort_values(['оклад'], ascending=False).head(5)  # Топ-5 окладов
fot = workers.agg({'оклад': 'sum'})  # Суммы окладов
print(workers.head(10))
print(30*'-')
print(hi5)
print(30*'-')
print(fot)
print(30*'-')

# Работа с массивами с помощью библиотеки 'numpy'

a = numpy.array([1, 2, 3, 4, 5])
b = numpy.array([[1, 1, 1], [2, 4, 8], [3, 9, 27], [4, 16, 64], [5, 25, 125]])
print(f'количество элементов массива a равно: {a.size}')
print(f'размерность массива b равна: {b.ndim}')
c = numpy.zeros((5, 5))  # Генерация "нулевого" массива 5 на 5
d = numpy.arange(1, 5, 0.2)  # Генерация списка в интервале 1 - 5 с шагом 0,2
print(c)
print(d)
